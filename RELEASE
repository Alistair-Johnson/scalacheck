ScalaCheck 1.11.2 Release Notes

ScalaCheck is a powerful tool for property-based testing of Scala and Java
programs. It features automatic test case generation and simplification of
failing test cases. ScalaCheck started out as a straightforward Scala port of
the Haskell library QuickCheck, and has since wandered off on its own. Most
features of QuickCheck can be found in ScalaCheck and vice versa, though.

ScalaCheck highlights:

  * Specifications are written in Scala, in a DSL-like fashion using
    combinators from the ScalaCheck library.

  * Properties are tested automatically, with test data generated by
    ScalaCheck. Data generation can be precisely controlled, and generation
    of custom data types is simple to define.

  * Failing test cases are simplified automatically, which makes pin-pointing
    error causes easier.

  * Support for stateful testing of command sequences, and simplification of
    failing command sequences.

  * The ScalaCheck library has no dependencies other than the Scala
    runtime.

  * ScalaCheck is well integrated with ScalaTest, sbt and specs2.

What's new in version 1.11.2?

ScalaCheck 1.11.2 is maintenance release with a few bug fixes and some
features added. It is binary compatible with ScalaCheck 1.11.1.

The most notable feature addition is handy withX-methods to Test.Parameters
and Gen.Parameters. This lets you override individual parameter values
like this:

  myProp.check(Test.Parameters.default.withMinSuccessfulTests(1000))

A new check-method simplifies it further by allowing you to provide a
function that modifies the default testing parameters:

  myProp.check(_.withMinSuccessfulTests(1000).withMaxSize(500))

The reason for not using Scala case classes to model parameters (which would
make the above even nicer) is that it is very hard to maintain binary
compatibility when new parameters are added.


ScalaCheck links:

  * Official documentation, downloads etc: http://www.scalacheck.org

  * Twitter: @scalacheck

  * Source repository and bug reporting: https://github.com/rickynils/scalacheck

  * SBT dependency

    resolvers ++= Seq(
      "snapshots" at "http://oss.sonatype.org/content/repositories/snapshots",
      "releases"  at "http://oss.sonatype.org/content/repositories/releases"
    )

    libraryDependencies ++= Seq(
      "org.scalacheck" %% "scalacheck" % "1.11.2" % "test"
    )

  * Maven dependency

    Add this to your pom.xml (example for Scala 2.10):

    <repositories>
      <repository>
        <id>oss.sonatype.org</id>
        <name>releases</name>
        <url>http://oss.sonatype.org/content/repositories/releases</url>
      </repository>
      <repository>
        <id>oss.sonatype.org</id>
        <name>snapshots</name>
        <url>http://oss.sonatype.org/content/repositories/snapshots</url>
      </repository>
    </repositories>

    <dependency>
      <groupId>org.scalacheck</groupId>
      <artifactId>scalacheck_2.10</artifactId>
      <version>1.11.2</version>
    </dependency>
